<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;
use Nurdaulet\FluxAuth\Helpers\UserHelper;

return new class extends Migration {
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {

        if (Schema::hasTable('users')) {
            $this->checkColumns();
        } else {
            Schema::create('users', function (Blueprint $table) {
                $table->id();
                $table->string('name')->nullable();
                $table->string('surname')->nullable();
                $table->string('last_name')->nullable();
                $table->string('email')->nullable();
                $table->string('avatar')->nullable();
                $table->string('avatar_color')->nullable();
                $table->timestamp('email_verified_at')->nullable();
                $table->string('phone')->nullable();
                $table->timestamp('phone_verified_at')->nullable();
                $table->foreignId('type_organization_id')->nullable()
                    ->constrained('type_organizations')->nullOnDelete();
                $table->string('company_name')->nullable();
                $table->string('bin_iin')->nullable();
                $table->string('password')->nullable();

                $table->string('iin')->nullable();

                $table->tinyInteger('online')->default(0);
                $table->dateTime('last_online')->nullable();
                $table->string('code')->nullable();
                $table->string('avg_rating')->default('0');

                $table->foreignId('city_id')->nullable()->constrained('cities')
                    ->nullOnDelete();
                $table->date('born_date')->nullable();
                $table->string('bik')->nullable();
                $table->string('iik')->nullable();
                $table->string('identify_face')->nullable();
                $table->string('identify_front')->nullable();
                $table->string('identify_back')->nullable();
                $table->boolean('is_identified')->default(false);
                $table->string('verify_image')->nullable();
                $table->tinyInteger('is_verified')->default(UserHelper::NOT_VERIFIED);

                $table->rememberToken();
                $table->boolean('is_enabled_notification')->default(false);
                $table->boolean('is_banned')->default(false);
                $table->string('contract')->nullable();
                $table->text('graphic_works')->nullable();
                $table->text('delivery_times')->nullable();
                $table->softDeletes();
                $table->timestamps();
            });
        }
//        Schema::hasTable('users'), function (Blueprint $table) {

    }

    private function checkColumns()
    {
        if (!Schema::hasColumn('users', 'name')) {
            Schema::table('users', function (Blueprint $table) {
                $table->string('name')->nullable();
            });
        }
        if (!Schema::hasColumn('users', 'surname')) {
            Schema::table('users', function (Blueprint $table) {
                $table->string('surname')->nullable();
            });
        }

        if (!Schema::hasColumn('users', 'last_name')) {
            Schema::table('users', function (Blueprint $table) {
                $table->string('last_name')->nullable();
            });
        }
        if (!Schema::hasColumn('users', 'email')) {
            Schema::table('users', function (Blueprint $table) {
                $table->string('email')->nullable();
            });
        }
        if (!Schema::hasColumn('users', 'avatar')) {
            Schema::table('users', function (Blueprint $table) {
                $table->string('avatar')->nullable();
            });
        }
        if (!Schema::hasColumn('users', 'avatar_color')) {
            Schema::table('users', function (Blueprint $table) {
                $table->string('avatar_color')->nullable();
            });
        }
        if (!Schema::hasColumn('users', 'email_verified_at')) {
            Schema::table('users', function (Blueprint $table) {
                $table->string('email_verified_at')->nullable();
            });
        }
        if (!Schema::hasColumn('users', 'phone')) {
            Schema::table('users', function (Blueprint $table) {
                $table->string('phone')->nullable();
            });
        }
        if (!Schema::hasColumn('users', 'phone_verified_at')) {
            Schema::table('users', function (Blueprint $table) {
                $table->timestamp('email_verified_at')->nullable();
            });
        }
        if (!Schema::hasColumn('users', 'type_organization_id')) {
            Schema::table('users', function (Blueprint $table) {
                $table->foreignId('type_organization_id')->nullable()->constrained('type_organizations')
                    ->nullOnDelete();
            });
        }
        if (!Schema::hasColumn('users', 'company_name')) {
            Schema::table('users', function (Blueprint $table) {
                $table->string('company_name')->nullable();

            });
        }
        if (!Schema::hasColumn('users', 'bin_iin')) {
            Schema::table('users', function (Blueprint $table) {
                $table->string('bin_iin')->nullable();

            });
        }
        if (!Schema::hasColumn('users', 'password')) {
            Schema::table('users', function (Blueprint $table) {
                $table->string('password')->nullable();
            });
        }
        if (!Schema::hasColumn('users', 'iin')) {
            Schema::table('users', function (Blueprint $table) {
                $table->string('iin')->nullable();
            });
        }
        if (!Schema::hasColumn('users', 'online')) {
            Schema::table('users', function (Blueprint $table) {
                $table->boolean('online')->default(0);
            });
        }
        if (!Schema::hasColumn('users', 'last_online')) {
            Schema::table('users', function (Blueprint $table) {
                $table->dateTime('last_online')->nullable();
            });
        }
        if (!Schema::hasColumn('users', 'code')) {
            Schema::table('users', function (Blueprint $table) {
                $table->string('code')->nullable();
            });
        }
        if (!Schema::hasColumn('users', 'avg_rating')) {
            Schema::table('users', function (Blueprint $table) {
                $table->string('avg_rating')->default('0');
            });
        }
        if (!Schema::hasColumn('users', 'city_id')) {
            Schema::table('users', function (Blueprint $table) {
                $table->foreignId('city_id')->nullable()->constrained('cities')
                    ->nullOnDelete();
            });
        }
        if (!Schema::hasColumn('users', 'born_date')) {
            Schema::table('users', function (Blueprint $table) {
                $table->date('born_date')->nullable();
            });
        }
        if (!Schema::hasColumn('users', 'bik')) {
            Schema::table('users', function (Blueprint $table) {
                $table->string('bik')->nullable();
            });
        }
        if (!Schema::hasColumn('users', 'iik')) {
            Schema::table('users', function (Blueprint $table) {
                $table->string('iik')->nullable();
            });
        }
        if (!Schema::hasColumn('users', 'identify_face')) {
            Schema::table('users', function (Blueprint $table) {
                $table->string('identify_face')->nullable();
            });
        }
        if (!Schema::hasColumn('users', 'identify_front')) {
            Schema::table('users', function (Blueprint $table) {
                $table->string('identify_front')->nullable();
            });
        }
        if (!Schema::hasColumn('users', 'identify_back')) {
            Schema::table('users', function (Blueprint $table) {
                $table->string('identify_back')->nullable();
            });
        }
        if (!Schema::hasColumn('users', 'is_identified')) {
            Schema::table('users', function (Blueprint $table) {
                $table->boolean('is_identified')->default(false);
            });
        }
        if (!Schema::hasColumn('users', 'verify_image')) {
            Schema::table('users', function (Blueprint $table) {
                $table->string('verify_image')->nullable();
            });
        }
        if (!Schema::hasColumn('users', 'is_verified')) {
            Schema::table('users', function (Blueprint $table) {
                $table->tinyInteger('is_verified')->default(UserHelper::NOT_VERIFIED);
            });
        }
        if (!Schema::hasColumn('users', 'is_enabled_notification')) {
            Schema::table('users', function (Blueprint $table) {
                $table->boolean('is_enabled_notification')->default(false);
            });
        }
        if (!Schema::hasColumn('users', 'is_banned')) {
            Schema::table('users', function (Blueprint $table) {
                $table->boolean('is_banned')->default(false);
            });
        }
        if (!Schema::hasColumn('users', 'contract')) {
            Schema::table('users', function (Blueprint $table) {
                $table->string('contract')->nullable();
            });
        }
        if (!Schema::hasColumn('users', 'graphic_works')) {
            Schema::table('users', function (Blueprint $table) {
                $table->text('graphic_works')->nullable();
            });
        }
        if (!Schema::hasColumn('users', 'delivery_times')) {
            Schema::table('users', function (Blueprint $table) {
                $table->text('delivery_times')->nullable();
            });
        }
        if (!Schema::hasColumn('users', 'deleted_at')) {
            Schema::table('users', function (Blueprint $table) {
                $table->softDeletes();
            });
        }
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::dropIfExists('users');
    }
};
