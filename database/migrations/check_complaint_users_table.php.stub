<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        if (Schema::hasTable('')) {
            $this->checkColumns();
        } else {
            Schema::create('complaint_users', function (Blueprint $table) {
                $table->id();
                $table->foreignId('complaint_reason_id')->nullable()->constrained('complaint_reasons')->cascadeOnDelete();
                $table->foreignId('user_id')->nullable()->constrained('users')->cascadeOnDelete();
                $table->foreignId('who_complaint_user_id')->nullable()->constrained('users')->cascadeOnDelete();
                $table->text('comment')->nullable();
                $table->boolean('status')->default(true);
                $table->softDeletes();
                $table->timestamps();
            });
        }
    }

    private function checkColumns()
    {
        if (!Schema::hasColumn('complaint_users', 'complaint_reason_id')) {
            Schema::table('complaint_users', function (Blueprint $table) {
                $table->foreignId('complaint_reason_id')->nullable()->constrained('complaint_reasons')->cascadeOnDelete();
            });
        };
        if (!Schema::hasColumn('complaint_users', 'user_id')) {
            Schema::table('complaint_users', function (Blueprint $table) {
                $table->foreignId('user_id')->nullable()->constrained('users')->cascadeOnDelete();
            });
        };
        if (!Schema::hasColumn('complaint_users', 'who_complaint_user_id')) {
            Schema::table('complaint_users', function (Blueprint $table) {
                $table->foreignId('who_complaint_user_id')->nullable()->constrained('users')->cascadeOnDelete();
            });
        };

        if (!Schema::hasColumn('complaint_users', 'comment')) {
            Schema::table('complaint_users', function (Blueprint $table) {
                $table->text('comment')->nullable();
            });
        };
        if (!Schema::hasColumn('complaint_users', 'status')) {
            Schema::table('complaint_users', function (Blueprint $table) {
                $table->boolean('status')->default(true);
            });
        };
        if (!Schema::hasColumn('complaint_users', 'deleted_at')) {
            Schema::table('complaint_users', function (Blueprint $table) {
                $table->softDeletes();
            });
        };
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::dropIfExists('complaint_users');
    }
};
