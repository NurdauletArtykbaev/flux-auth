<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration {
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        if (Schema::hasTable('user_organizations')) {
            $this->checkColumns();
        } else {
            Schema::create('user_organizations', function (Blueprint $table) {
                $table->id();
                //Инфо
                $table->string('name')->nullable();
                $table->string('form_organization')->nullable()->comment("Форма организации");
                $table->string('bin_iin')->nullable();
                $table->string('address')->nullable();
                $table->date('birthdate')->nullable();
                $table->string('full_name_head')->nullable()->comment("ФИО руководителя");
                $table->foreignId('user_id')->constrained('users')->cascadeOnDelete();
                $table->foreignId('type_organization_id')->nullable()
                    ->constrained('type_organizations')->nullOnDelete();
                $table->string('certificate_register_ip')->nullable()->comment("Талон о регистрации ИП");
                $table->string('field_activity')->nullable()->comment("Сфера деятель");
                $table->boolean('is_selected')->default(false);

                //Оплата
                $table->string('recipient_invoice_bank')->nullable()->comment("Банк-получатель оплаты");
                $table->string('recipient_invoice_bank_full_name')->nullable()->comment("Имя и фамилия владельца банковского счета");
                $table->string('bik')->nullable()->comment("БИК");
                $table->string('iban')->nullable()->comment("IBAN");
                $table->string('recipient_invoice_address')->nullable()->comment("Адрес получателя счетов");
                $table->integer('status')->default(0);
                $table->text('message')->nullable();
                $table->softDeletes();
                $table->timestamps();
            });
        }

    }


    private function checkColumns()
    {
        if (!Schema::hasColumn('user_organizations', 'name')) {
            Schema::table('user_organizations', function (Blueprint $table) {
                $table->string('name')->nullable();
            });
        }
        if (!Schema::hasColumn('user_organizations', 'form_organization')) {
            Schema::table('user_organizations', function (Blueprint $table) {
                $table->string('form_organization')->nullable()->comment("Форма организации");
            });
        }
        if (!Schema::hasColumn('user_organizations', 'bin_iin')) {
            Schema::table('user_organizations', function (Blueprint $table) {
                $table->string('bin_iin')->nullable();
            });
        }
        if (!Schema::hasColumn('user_organizations', 'address')) {
            Schema::table('user_organizations', function (Blueprint $table) {
                $table->string('address')->nullable();
            });
        }
        if (!Schema::hasColumn('user_organizations', 'birthdate')) {
            Schema::table('user_organizations', function (Blueprint $table) {
                $table->date('birthdate')->nullable();
            });
        }
        if (!Schema::hasColumn('user_organizations', 'full_name_head')) {
            Schema::table('user_organizations', function (Blueprint $table) {
                $table->string('full_name_head')->nullable()->comment("ФИО руководителя");
            });
        }
        if (!Schema::hasColumn('user_organizations', 'user_id')) {
            Schema::table('user_organizations', function (Blueprint $table) {
                $table->foreignId('user_id')->constrained('users')->cascadeOnDelete();
            });
        }
        if (!Schema::hasColumn('user_organizations', 'type_organization_id')) {
            Schema::table('user_organizations', function (Blueprint $table) {
                $table->foreignId('type_organization_id')->nullable()
                    ->constrained('type_organizations')->nullOnDelete();
            });
        }

        if (!Schema::hasColumn('user_organizations', 'certificate_register_ip')) {
            Schema::table('user_organizations', function (Blueprint $table) {
                $table->string('certificate_register_ip')->nullable()->comment("Талон о регистрации ИП");

            });
        }
        if (!Schema::hasColumn('user_organizations', 'field_activity')) {
            Schema::table('user_organizations', function (Blueprint $table) {
                $table->string('field_activity')->nullable()->comment("Сфера деятель");
            });
        }
        if (!Schema::hasColumn('user_organizations', 'is_selected')) {
            Schema::table('user_organizations', function (Blueprint $table) {
                $table->boolean('is_selected')->default(false);
            });
        }
        if (!Schema::hasColumn('user_organizations', 'recipient_invoice_bank')) {
            Schema::table('user_organizations', function (Blueprint $table) {
                $table->string('recipient_invoice_bank')->nullable()->comment("Банк-получатель оплаты");
            });
        }
        if (!Schema::hasColumn('user_organizations', 'recipient_invoice_bank_full_name')) {
            Schema::table('user_organizations', function (Blueprint $table) {
                $table->string('recipient_invoice_bank_full_name')->nullable()->comment("Имя и фамилия владельца банковского счета");
            });
        }
        if (!Schema::hasColumn('user_organizations', 'bik')) {
            Schema::table('user_organizations', function (Blueprint $table) {
                $table->string('bik')->nullable()->comment("БИК");
            });
        }
        if (!Schema::hasColumn('user_organizations', 'iban')) {
            Schema::table('user_organizations', function (Blueprint $table) {
                $table->string('iban')->nullable()->comment("IBAN");
            });
        }
        if (!Schema::hasColumn('user_organizations', 'recipient_invoice_address')) {
            Schema::table('user_organizations', function (Blueprint $table) {
                $table->string('recipient_invoice_address')->nullable()->comment("Адрес получателя счетов");
            });
        }
        if (!Schema::hasColumn('user_organizations', 'status')) {
            Schema::table('user_organizations', function (Blueprint $table) {
                $table->integer('status')->default(0);
            });
        }
        if (!Schema::hasColumn('user_organizations', 'message')) {
            Schema::table('user_organizations', function (Blueprint $table) {
                $table->text('message')->nullable();
            });
        }

        if (!Schema::hasColumn('user_organizations', 'created_at')) {
            Schema::table('user_organizations', function (Blueprint $table) {
                $table->timestamps();
            });
        }
        if (!Schema::hasColumn('user_organizations', 'deleted_at')) {
           Schema::table('user_organizations', function (Blueprint $table) {
                $table->softDeletes();
           });
        }
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::dropIfExists('user_organizations');
    }
};
